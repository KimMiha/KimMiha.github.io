---
layout: post
title: ""
tags: [effective java, study]
comments: true
---

## chanpter 1 스프링부트 입문하기

스타더는 애플리케이션에 포함되는 편리한 의존성 집합체.

스타터를 사용하면 의존성을 일일이 찾지 않고도 모든 필요한 스프링 관련 기술을 한번에 도입할 수 있다.

스프링 역시 개발 환경 설정이 만만치 않은데 안정성, 성능, 의존성주입 등 매우 강력한 장점들 덕에 자바 대표 프레임워크로 자리잡았다.

스프링팀은 이 같은 단점을 보완하고자 스프링부트를 만들었다. 

스프링 부트는 필요한 환경 설정을 최소화하고 개발자가 비즈니스 로직에 집중할 수 있도록 도와줘 생산성을 크게 향상시킨다.

스프링부트는 스프링 프레임워크라는 큰 틀에 속하는 도구!

### 스프링 부트 특징
* 임베디드 톰캣, 제티, 언더토우를 사용하여 독립 실행이 가능한 스프링 애플리케이션 개발
* 통합 스타터를 제공하여 메이븐/그레들 구성 간소화
* 스타터를 통한 자동화된 스프링 설정 제공
* 번거로운 XML 설정 요구 X
* JAR를 사용하여 자바 옵션만으로도 배포 가능
* 애플리케이션의 모니터링과 관리를 위한 스프링 액츄에이터 제공

**스타터란?** 특정 목적을 달성하기 위한 의존성 그룹! - 빌드에 필요한 의존성을 자동으로 관리함

스타터 내부의 의존성을 확인하는 방법
1. 의존관계가 궁금할때, [Spring Boot Reference Guide](https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-starter) **Table 13.1. Spring Boot application starters** 에서 `Pom`확인 
